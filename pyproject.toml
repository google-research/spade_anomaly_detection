[project]
# Project metadata. Available keys are documented at:
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata
name = "spade_anomaly_detection"
description = "Semi-supervised Pseudo Labeler Anomaly Detection with Ensembling (SPADE) is a semi-supervised anomaly detection method that uses an ensemble of one class classifiers as the pseudo-labelers and supervised classifiers to achieve state of the art results especially on datasets with distribution mismatch between labeled and unlabeled samples."
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [{name = "spade_anomaly_detection authors", email="spade_anomaly_detection@google.com"}]
classifiers = [  # List of https://pypi.org/classifiers/
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Science/Research",
]
keywords = ["anomaly detection", "ensemble model", "one class classifiers"]

# pip dependencies of the project
# Installed locally with `pip install -e .`
dependencies = [
  "absl-py==1.4.0",
  "frozendict==2.3.2",
  "joblib==1.2.0",
  "pandas==1.3.5",
  "pyarrow==14.0.1",
  "retry==0.9.2",
  "scikit-learn==1.4.2",
  "tensorflow==2.12.1",
  "tensorflow-datasets==4.9.6",
  "parameterized==0.8.1",
  "pytest==7.1.2",
  "fastavro[codecs]==1.4.12",
  "google-cloud-bigquery[pandas]==3.16.0",
  "google-cloud-bigquery-storage[pandas,pyarrow,fastavro]==2.24.0",
  "google-cloud-storage==2.14.0",
  "cloudml-hypertune==0.1.0.dev6",
  "tensorflow_decision_forests==1.3.0"
]

# `version` is automatically set by flit to use `spade_anomaly_detection.__version__`
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/google-research/spade_anomaly_detection"
repository = "https://github.com/google-research/spade_anomaly_detection"
changelog = "https://github.com/google-research/spade_anomaly_detection/blob/main/CHANGELOG.md"
# documentation = ""

[project.optional-dependencies]
# Development deps (unittest, linting, formating,...)
# Installed through `pip install -e .[dev]`
dev = [
    "pytest",
    "pytest-xdist",
    "pylint>=2.6.0",
    "pyink",
]

[tool.pyink]
# Formatting configuration to follow Google style-guide
line-length = 80
unstable = true
pyink-indentation = 2
pyink-use-majority-quotes = true

[build-system]
# Build system specify which backend is used to build/install the project (flit,
# poetry, setuptools,...). All backends are supported by `pip install`
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
# Flit specific options (files to exclude from the PyPI package).
# If using another build backend (setuptools, poetry), you can remove this
# section.
exclude = [
  # Do not release tests files on PyPI
  "**/*_test.py",
]
